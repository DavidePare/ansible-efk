---
### Set up the keystore - check the existence and create it in case 
- name: keystore exists
  stat:
    path: "{{ elasticsearch_conf_dir }}/elasticsearch.keystore"
  register: keystore_file
  
- name: Print keystore file content
  debug:
    var: keystore_file

- name: Create keystore if it does not exists
  ansible.builtin.command: >
    {{executable_path}}/elasticsearch-keystore create
  when: not keystore_file.stat.exists

- name: Create keystore if it does not exists
  ansible.builtin.command: >
    {{executable_path}}/elasticsearch-keystore list
  register: keystore_info

- name: Print info keystore
  ansible.builtin.debug:
    var: keystore_info

- name: Save information inside the keystore (Keystore Transport SSL)
  ansible.builtin.shell: |
    echo '{{elastic_certificates_password}}\n' | su - elasticsearch -c "{{executable_path}}/elasticsearch-keystore add -x -f xpack.security.transport.ssl.keystore.secure_password"
  #when: "'xpack.security.transport.ssl.keystore.secure_password' not in keystore_info.stdout "
  register: save_keystore_result

- name: Print save_keystore_result
  ansible.builtin.debug:
    var: save_keystore_result

- name: Save information inside the keystore (Truststore Transport SSL)
  ansible.builtin.shell: |
    echo '{{elastic_certificates_password}}\n' | su - elasticsearch -c "{{executable_path}}/elasticsearch-keystore add -x -f xpack.security.transport.ssl.truststore.secure_password"

# In case HTTPS was not enabled we will use the same certificate used from transport
- block:
  - name: Save information inside the keystore (Keystore HTTP SSL)
    ansible.builtin.shell: |
      echo '{{elastic_certificates_password}}\n' | su - elasticsearch -c "{{executable_path}}/elasticsearch-keystore add -x -f xpack.security.http.ssl.keystore.secure_password"

  - name: Save information inside the keystore (Truststore HTTP SSL)
    ansible.builtin.shell: |
      echo '{{elastic_certificates_password}}\n' | su - elasticsearch -c "{{executable_path}}/elasticsearch-keystore add -x -f xpack.security.http.ssl.truststore.secure_password"
  
  when:
    - not elasticsearch_https_enabled
    - elasticsearch_security_enabled

# In case HTTPS is enabled
- block:
  - name: Save HTTPS in the keystore
    ansible.builtin.shell: |
      echo '{{elasticsearch_http_password}}\n' | su - elasticsearch -c "{{executable_path}}/elasticsearch-keystore add -x -f xpack.security.http.ssl.keystore.secure_password"
  when:
    - elasticsearch_https_enabled
    - elasticsearch_security_enabled

- name: Save information bootstrap
  ansible.builtin.shell: |
    echo '{{bootstrap_pass}}\n' | su - elasticsearch -c "{{executable_path}}/elasticsearch-keystore add -x -f bootstrap.password"
  #when: "'bootstrap.password' not in keystore_info.stdout "
    
- name: Create keystore if it does not exists
  ansible.builtin.shell: |
    {{executable_path}}/elasticsearch-keystore list
  register: keystore_info

- name: Print info keystore
  ansible.builtin.debug:
    var: keystore_info
